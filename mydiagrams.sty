\usepackage{makecell}
\usepackage{setspace}

\newcommand{\algoyesno}[1]{
  \centering
  \Large
  \begin{tikzpicture}[node distance=1.0in, #1]

    \node (question)  [ellipse, draw, thick] {\textbf{Question}};
    \node (algorithm) [rectangle, draw, below of=question, thick] 
    {\textbf{Algorithm}};
    \node (yes)       [ellipse, draw, fill=green!20,
    below of=algorithm, left of=algorithm, thick] {\textbf{Yes}};
    \node (no)        [ellipse, draw, fill=red!20,
    below of=algorithm, right of=algorithm, thick] {\textbf{No}};

    \draw [->, ultra thick]        (question) -- (algorithm);
    \draw [->, ultra thick]        (algorithm) -- (yes);
    \draw [->, ultra thick]        (algorithm) -- (no);

  \end{tikzpicture}
}


\newcommand{\mandelrecsimple}[0]{
  \begin{tikzpicture}[node distance=4.5cm, >=stealth]
    \node (input) [input, draw, thick] 
                  {\makecell[l]{\textbf{Input:} $c \in \complexes$ \\
                   \textbf{Initialize:} $z = 0$}};
    \node (branch) [branch, draw, thick, right of=input] {$|z| > 2$ ?};
    \node (compute) [compute, draw, thick, above of=branch] {$z = z^2 + c$};
    \node (accept) [accept, draw, thick, below of=branch] {\textbf{Accept}};
    \node (reject) [reject, draw, thick, left of=accept] {\textbf{Reject}};
    
    \draw [->, very thick] (input) -- (branch);
    \draw [->, very thick] (compute) -- (branch);
    \draw [->, very thick] (branch) to node [auto] {Yes} (accept);
    \draw [->, very thick] (branch) to [out=0, in=0, swap] node [auto] {No} (compute);
    
  \end{tikzpicture}
}

\newcommand{\mandelrecfull}[0]{
  \begin{tikzpicture}[node distance=4.5cm, >=stealth]
    \node (input) [input, draw, thick, label=270:$\eta_1$] 
    {\makecell[l]{\textbf{Input:} $(x_1, x_2) \in \reals^2$ \\
        \textbf{Initialize:} $\bar{x} = I(x_1, x_2)$}};
    \node (branch) [branch, draw, thick, right of=input, label=-45:{$\eta_2$}] {$h_{\eta_2}(\bar{x}) > 0$ ?};
    \node (compute) [compute, draw, thick, above of=branch, label=180:{$\eta_3$}] {$\bar{x} = g_{\eta_3}(\bar{x})$};
    \node (accept) [accept, draw, thick, below of=branch] {\textbf{Accept}};
    \node (reject) [reject, draw, thick, left of=accept] {\textbf{Reject}};
    
    \draw [->, very thick] (input) -- (branch);
    \draw [->, very thick] (compute) -- (branch);
    \draw [->, very thick] (branch) to node [auto] {Yes} (accept);
    \draw [->, very thick] (branch) to [out=0, in=0, swap] node [auto] {No} (compute);    
    
  \end{tikzpicture}
}

\newcommand{\mandlegend}[0]{
  \begin{tikzpicture}
    \node (legend) [rectangle, draw, fill=black!15, node distance=3.0cm]
    { \makecell[l]{
        $\nodes = \set{\eta_1, \eta_2, \eta_3, \accept, \reject}$\\
        $\inspace_M = \reals^2$\\
        $\statespace_M = \reals^4$\\ \\
        \textbf{Input Function:}\\
        $I(x_1, x_2) = (0, 0, x_1, x_2)$ \\ \\
        \textbf{Computation Function(s):}\\
        $g_{\eta_3}(x_1, x_2, x_3, x_4) = (x_1^2 - x_2^2 + x_3,2x_1x_2 + x_4, x_3, x_4)$\\ \\
        \textbf{Branching Function(s):}\\
        $h_{\eta_2}(x_1, x_2, x_3, x_4) = (x_1^2 + x_2^2 -2)$\\
      } };
  \end{tikzpicture}
}

\tikzstyle{hide}=[white, draw=white, text=white, fill=white]

\newcommand{\mandelrecpI}[0]{
  \begin{tikzpicture}[node distance=4.5cm, >=stealth]
    \node (input) [input, draw, thick] 
                  {\makecell[l]{\textbf{Input:} $c \in \complexes$ \\
                   \textbf{Initialize:} $z = 0$}};
    \node (branch) [branch, hide, thick, right of=input] {$|z| > 2$ ?};
    \node (compute) [compute, hide, thick, above of=branch] {$z = z^2 + c$};
    \node (accept) [accept, draw, thick, below of=branch] {\textbf{Accept}};
    \node (reject) [reject, draw, thick, left of=accept] {\textbf{Reject}};

    \draw [->, hide, very thick] (input) -- (branch);
    \draw [->, hide, very thick] (compute) -- (branch);
    \draw [->, hide, very thick] (branch) to node [auto] {Yes} (accept);
    \draw [->, hide, very thick] (branch) to [out=0, in=0, swap] node [auto] {No} (compute);

  \end{tikzpicture}
}

\newcommand{\mandelrecpII}[0]{
  \begin{tikzpicture}[node distance=4.5cm, >=stealth]
    \node (input) [input, draw, thick] 
                  {\makecell[l]{\textbf{Input:} $c \in \complexes$ \\
                   \textbf{Initialize:} $z = 0$}};
    \node (branch) [branch, draw, thick, right of=input] {$|z| > 2$ ?};
    \node (compute) [compute, draw, thick, above of=branch] {$z = z^2 + c$};
    \node (accept) [accept, draw, thick, below of=branch] {\textbf{Accept}};
    \node (reject) [reject, draw, thick, left of=accept] {\textbf{Reject}};
    
    \draw [->, very thick] (input) -- (branch);
    \draw [->, very thick] (compute) -- (branch);
    \draw [->, very thick] (branch) to node [auto] {Yes} (accept);
    \draw [->, very thick] (branch) to [out=0, in=0, swap] node [auto] {No} (compute);
  \end{tikzpicture}
}

\tikzstyle{extend}=[very thick, 
                    >=triangle 45, 
                    shorten >=1.5mm,
                    shorten <=1.5mm, 
                    dashed,
                    color=blue]

\tikzstyle{generalize}=[very thick]

\newcommand{\outline}[0]{
  \begin{tikzpicture}[minimum width = 3.5cm, minimum height = 1cm, inner sep = 0mm, >=latex]
    
    \node (TM) [ellipse, draw, thick] {Turing Machine};
    \node (NTM) [ellipse, draw, thick, below right=4cm and -.25cm of TM] {NTM};
    \node (verify) [ellipse, draw, thick, below left=4cm and -.25cm of TM] {Verifier};
    
    \node (BSS) [ellipse, draw, thick, right=5cm of TM] {BSS Machine};
    \node (NDET) [ellipse, draw, thick, below right=4cm and -.25cm of BSS] {NDET Machine};
    \node (bverify) [ellipse, draw, thick, below left=4cm and -.25cm of BSS] {BSS Verifier};

    \draw [->, extend] (TM) -- (NTM);
    \draw [->, extend] (TM) -- (verify);

    \draw [->, extend] (BSS) -- (NDET);
    \draw [->, extend] (BSS) -- (bverify);

    \draw [->, generalize] (TM) to [out=15, in=165] (BSS);
    \draw [->, generalize] (verify) to [out=345, in=195] (bverify);
    \draw [->, generalize] (NTM) to [out=345, in=195]  (NDET);
    
  \end{tikzpicture}
}

\tikzstyle{mandpoint}=[circle, 
                       draw,
                       fill=blue!100, 
                       inner sep=.3mm]

                       