\usepackage{makecell}
\usepackage{setspace}
\usetikzlibrary{positioning}

\newcommand{\algoyesno}[1]{
  \centering
  \Large
  \begin{tikzpicture}[node distance=1.0in, #1]

    \node (question)  [ellipse, draw, thick] {\textbf{Question}};
    \node (algorithm) [rectangle, draw, below of=question, thick] 
    {\textbf{Algorithm}};
    \node (yes)       [ellipse, draw, fill=green!20,
    below of=algorithm, left of=algorithm, thick] {\textbf{Yes}};
    \node (no)        [ellipse, draw, fill=red!20,
    below of=algorithm, right of=algorithm, thick] {\textbf{No}};

    \draw [->, ultra thick]        (question) -- (algorithm);
    \draw [->, ultra thick]        (algorithm) -- (yes);
    \draw [->, ultra thick]        (algorithm) -- (no);

  \end{tikzpicture}
}

\newcommand{\mandelrecsimple}[0]{
  \begin{tikzpicture}[node distance=4.5cm, >=stealth]
    \node (input) [input, draw, thick] 
                  {\makecell[l]{\textbf{Input:} $c \in \complexes$ \\
                   \textbf{Initialize:} $z = 0$}};
    \node (branch) [branch, draw, thick, right of=input] {$|z| > 2$ ?};
    \node (compute) [compute, draw, thick, above of=branch] {$z = z^2 + c$};
    \node (accept) [accept, draw, thick, below of=branch] {\textbf{Accept}};
    \node (reject) [reject, draw, thick, left of=accept] {\textbf{Reject}};
    
    \draw [->, very thick] (input) -- (branch);
    \draw [->, very thick] (compute) -- (branch);
    \draw [->, very thick] (branch) to node [auto] {Yes} (accept);
    \draw [->, very thick] (branch) to [out=0, in=0, swap] node [auto] {No} (compute);
    
  \end{tikzpicture}
}

\newcommand{\mandelrecfull}[0]{
  \begin{tikzpicture}[node distance=4.5cm, >=stealth]
    \node (input) [input, draw, thick, label=270:$\eta_1$] 
    {\makecell[l]{\textbf{Input:} $(x_1, x_2) \in \reals^2$ \\
        \textbf{Initialize:} $\bar{x} = I(x_1, x_2)$}};
    \node (branch) [branch, draw, thick, right of=input, label=-45:{$\eta_2$}] {$h_{\eta_2}(\bar{x}) > 0$ ?};
    \node (compute) [compute, draw, thick, above of=branch, label=180:{$\eta_3$}] {$\bar{x} = g_{\eta_3}(\bar{x})$};
    \node (accept) [accept, draw, thick, below of=branch] {\textbf{Accept}};
    \node (reject) [reject, draw, thick, left of=accept] {\textbf{Reject}};
    
    \draw [->, very thick] (input) -- (branch);
    \draw [->, very thick] (compute) -- (branch);
    \draw [->, very thick] (branch) to node [auto] {Yes} (accept);
    \draw [->, very thick] (branch) to [out=0, in=0, swap] node [auto] {No} (compute);    
    
  \end{tikzpicture}
}

\newcommand{\mandlegend}[0]{
  \begin{tikzpicture}
    \node (legend) [rectangle, draw, fill=black!15, node distance=3.0cm]
    { \makecell[l]{
        $\nodes = \set{\eta_1, \eta_2, \eta_3, \accept, \reject}$\\
        \textbf{Input Function:}\\
        $I(x_1, x_2) = (0, 0, x_1, x_2)$ \\ \\
        \textbf{Computation Function(s):}\\
        $g_{\eta_3}(x_1, x_2, x_3, x_4) = (x_1^2 - x_2^2 + x_3,2x_1x_2 + x_4, x_3, x_4)$\\ \\
        \textbf{Branching Function(s):}\\
        $h_{\eta_2}(x_1, x_2, x_3, x_4) = (x_1^2 + x_2^2 -2)$\\
      } };
  \end{tikzpicture}
}

\tikzstyle{hide}=[white, draw=white, text=white, fill=white]

\newcommand{\mandelrecpI}[0]{
  \begin{tikzpicture}[node distance=4.5cm, >=stealth]
    \node (input) [input, draw, thick] 
                  {\makecell[l]{\textbf{Input:} $c \in \complexes$ \\
                   \textbf{Initialize:} $z = 0$}};
    \node (branch) [branch, hide, thick, right of=input] {$|z| > 2$ ?};
    \node (compute) [compute, hide, thick, above of=branch] {$z = z^2 + c$};
    \node (accept) [accept, draw, thick, below of=branch] {\textbf{Accept}};
    \node (reject) [reject, draw, thick, left of=accept] {\textbf{Reject}};

    \draw [->, hide, very thick] (input) -- (branch);
    \draw [->, hide, very thick] (compute) -- (branch);
    \draw [->, hide, very thick] (branch) to node [auto] {Yes} (accept);
    \draw [->, hide, very thick] (branch) to [out=0, in=0, swap] node [auto] {No} (compute);

  \end{tikzpicture}
}

\newcommand{\mandelrecpII}[0]{
  \begin{tikzpicture}[node distance=4.5cm, >=stealth]
    \node (input) [input, draw, thick] 
                  {\makecell[l]{\textbf{Input:} $c \in \complexes$ \\
                   \textbf{Initialize:} $z = 0$}};
    \node (branch) [branch, draw, thick, right of=input] {$|z| > 2$ ?};
    \node (compute) [compute, draw, thick, above of=branch] {$z = z^2 + c$};
    \node (accept) [accept, draw, thick, below of=branch] {\textbf{Accept}};
    \node (reject) [reject, draw, thick, left of=accept] {\textbf{Reject}};
    
    \draw [->, very thick] (input) -- (branch);
    \draw [->, very thick] (compute) -- (branch);
    \draw [->, very thick] (branch) to node [auto] {Yes} (accept);
    \draw [->, very thick] (branch) to [out=0, in=0, swap] node [auto] {No} (compute);
  \end{tikzpicture}
}

\tikzstyle{extend}=[very thick, 
                    >=triangle 45, 
                    shorten >=1.5mm,
                    shorten <=1.5mm, 
                    dashed,
                    color=blue]

\tikzstyle{generalize}=[very thick]

\newcommand{\outlinealmostfinal}[0]{
  \begin{tikzpicture}[minimum width = 3.5cm, minimum height = 1cm, inner sep = 0mm, >=latex]
    
    \node (TM) [ellipse, draw, thick] {Turing Machine};
    \node (NTM) [ellipse, draw, thick, below right=4cm and -.25cm of TM] {NTM};
    \node (verify) [ellipse, draw, thick, below left=4cm and -.25cm of TM] {Verifier};
    \node (tmtitle) [rectangle, draw, minimum height=0cm, inner sep=2mm, 
                     above of=TM, node distance=2cm] {Classical Theory of Computation};

    \node (BSS) [ellipse, draw, thick, right=5cm of TM] {BSS Machine};
    \node (NDET) [ellipse, draw, thick, below right=4cm and -.25cm of BSS] {NDET Machine};
    \node (bverify) [ellipse, draw, thick, below left=4cm and -.25cm of BSS] {BSS Verifier};
    \node (bsstitle) [rectangle, draw, minimum height=0cm, inner sep=2mm, 
                     above of=BSS, node distance=2cm] {Algebraic Theory of Computation};

    \draw[color=white] (verify) to node[midway, color=black] {=} (NTM);
    \draw[color=white] (bverify) to node[midway, color=black] {??} (NDET);

    \draw [->, extend] (TM) to (NTM);
    \draw [->, extend] (TM) to (verify);

    \draw [->, extend] (BSS) -- (NDET);
    \draw [->, extend] (BSS) -- (bverify);

    \draw [->, generalize] (TM) to [out=15, in=165] (BSS);
    \draw [->, generalize] (verify) to [out=345, in=195] (bverify);
    \draw [->, generalize] (NTM) to [out=345, in=195]  (NDET);
    
  \end{tikzpicture}
}

\newcommand{\outlinefinal}[0]{
  \begin{tikzpicture}[minimum width = 3.5cm, minimum height = 1cm, inner sep = 0mm, >=latex]
    
    \node (TM) [ellipse, draw, thick] {Turing Machine};
    \node (NTM) [ellipse, draw, thick, below right=4cm and -.25cm of TM] {NTM};
    \node (verify) [ellipse, draw, thick, below left=4cm and -.25cm of TM] {Verifier};
    \node (tmtitle) [rectangle, draw, minimum height=0cm, inner sep=2mm, 
                     above of=TM, node distance=2cm] {Classical Theory of Computation};

    \node (BSS) [ellipse, draw, thick, right=5cm of TM] {BSS Machine};
    \node (NDET) [ellipse, draw, thick, below right=4cm and -.25cm of BSS] {NDET Machine};
    \node (bverify) [ellipse, draw, thick, below left=4cm and -.25cm of BSS] {BSS Verifier};
    \node (bsstitle) [rectangle, draw, minimum height=0cm, inner sep=2mm, 
                     above of=BSS, node distance=2cm] {Algebraic Theory of Computation};

    \draw[color=white] (verify) to node[midway, color=black] {=} (NTM);
    \draw[color=white] (bverify) to node[midway, color=black] {$\supseteq$} (NDET);

    \draw [->, extend] (TM) to (NTM);
    \draw [->, extend] (TM) to (verify);

    \draw [->, extend] (BSS) -- (NDET);
    \draw [->, extend] (BSS) -- (bverify);

    \draw [->, generalize] (TM) to [out=15, in=165] (BSS);
    \draw [->, generalize] (verify) to [out=345, in=195] (bverify);
    \draw [->, generalize] (NTM) to [out=345, in=195]  (NDET);
    
  \end{tikzpicture}
}

\newcommand{\outlinenobss}[0]{
  \begin{tikzpicture}[minimum width = 3.5cm, minimum height = 1cm, inner sep = 0mm, >=latex]
    
    \node (TM) [ellipse, draw, thick] {Turing Machine};
    \node (NTM) [ellipse, draw, thick, below right=4cm and -.25cm of TM] {NTM};
    \node (verify) [ellipse, draw, thick, below left=4cm and -.25cm of TM] {Verifier};
    \node (tmtitle) [rectangle, draw, minimum height=0cm, inner sep=2mm, 
                     above of=TM, node distance=2cm] {Classical Theory of Computation};

    \node (BSS) [ellipse, hide, draw, thick, right=5cm of TM] {BSS Machine};
    \node (NDET) [ellipse, hide, draw, thick, below right=4cm and -.25cm of BSS] {NDET Machine};
    \node (bverify) [ellipse, hide, draw, thick, below left=4cm and -.25cm of BSS] {BSS Verifier};
    \node (bsstitle) [rectangle, hide, draw, minimum height=0cm, inner sep=2mm, 
                     above of=BSS, node distance=2cm] {Algebraic Theory of Computation};

    \draw[color=white] (verify) to node[midway, color=black] {=} (NTM);
    % \draw[color=white] (bverify) to node[midway, color=black] {??} (NDET);

    \draw [->, extend] (TM) to (NTM);
    \draw [->, extend] (TM) to (verify);

    \draw [->, generalize, color=white] (TM) to [out=15, in=165] (BSS);
    \draw [->, generalize, color=white] (verify) to [out=345, in=195] (bverify);
    \draw [->, generalize, color=white] (NTM) to [out=345, in=195]  (NDET);

  \end{tikzpicture}
}

\newcommand{\outlinenondet}[0]{
  \begin{tikzpicture}[minimum width = 3.5cm, minimum height = 1cm, inner sep = 0mm, >=latex]
    
    \node (TM) [ellipse, draw, thick] {Turing Machine};
    \node (NTM) [ellipse, draw, thick, below right=4cm and -.25cm of TM] {NTM};
    \node (verify) [ellipse, draw, thick, below left=4cm and -.25cm of TM] {Verifier};
    \node (tmtitle) [rectangle, draw, minimum height=0cm, inner sep=2mm, 
                     above of=TM, node distance=2cm] {Classical Theory of Computation};

    \node (BSS) [ellipse, draw, thick, right=5cm of TM] {BSS Machine};
    \node (NDET) [ellipse, hide, draw, thick, below right=4cm and -.25cm of BSS] {NDET Machine};
    \node (bverify) [ellipse, draw, thick, below left=4cm and -.25cm of BSS] {BSS Verifier};
    \node (bsstitle) [rectangle, draw, minimum height=0cm, inner sep=2mm, 
                     above of=BSS, node distance=2cm] {Algebraic Theory of Computation};
    \draw[color=white] (verify) to node[midway, color=black] {=} (NTM);

    \draw [->, extend] (TM) -- (NTM);
    \draw [->, extend] (TM) -- (verify);

    % \draw [->, extend] (BSS) -- (NDET);
    \draw [->, extend] (BSS) -- (bverify);


    \draw [->, generalize] (TM) to [out=15, in=165] (BSS);
    \draw [->, generalize] (verify) to [out=345, in=195] (bverify);
    % \draw [->, generalize] (NTM) to [out=345, in=195]  (NDET);
    
  \end{tikzpicture}
}

\newcommand{\detercomp}[0]{
  \begin{tikzpicture}
    
    \node (z0) [circle, draw, thick] {$z_0$};
    \node (z1) [circle, draw, thick, below of=z0] {$z_1$};
    \node (z2) [circle, draw, thick, below of=z1] {$z_2$};
    \node (z3) [circle, draw, thick, below of=z2] {$z_3$};
    \node (cont) [circle, thick, below of=z3] {$\vdots$};
    
    \draw [->] (z0) -- (z1);
    \draw [->] (z1) -- (z2);
    \draw [->] (z2) -- (z3);
    \draw [->] (z3) -- (cont);
  \end{tikzpicture}
}

\newcommand{\detercomptm}[0]{
  \begin{tikzpicture}[font=\footnotesize, inner sep=0mm, minimum width=.75cm]
    
    \node (z0) [circle, draw, thick] {$q_0,s_0$};
    \node (z1) [circle, draw, thick, below of=z0] {$q_1, s_1$};
    \node (z2) [circle, draw, thick, below of=z1] {$q_2, s_2$};
    \node (z3) [circle, draw, thick, below of=z2] {$q_3, s_3$};
    \node (cont) [circle, draw, thick, below of=z3] {$\cdots$};
    \node (end) [circle, draw, thick, below of=cont] {$q_t, s_t$};
    
    \draw [->] (z0) -- (z1);
    \draw [->] (z1) -- (z2);
    \draw [->] (z2) -- (z3);
    \draw [->] (z3) -- (cont);
    \draw [->] (cont) -- (end);
  \end{tikzpicture}
}

\newcommand{\detercompbss}[0]{
  \begin{tikzpicture}[font=\footnotesize, inner sep=0mm, minimum width=.75cm]
    
    \node (z0) [circle, draw, thick] {$z_0$};
    \node (z1) [circle, draw, thick, below of=z0] {$z_1$};
    \node (z2) [circle, draw, thick, below of=z1] {$z_2$};
    \node (z3) [circle, draw, thick, below of=z2] {$z_3$};
    \node (cont) [circle, draw, thick, below of=z3] {$\cdots$};
    \node (end) [circle, draw, thick, below of=cont] {$z_t$};
    
    \draw [->] (z0) -- (z1);
    \draw [->] (z1) -- (z2);
    \draw [->] (z2) -- (z3);
    \draw [->] (z3) -- (cont);
    \draw [->] (cont) -- (end);
  \end{tikzpicture}
}


\newcommand{\ndetercomptm}[0]{
  \begin{tikzpicture}[font=\footnotesize, inner sep=1mm, minimum width=1.5cm]
    
    \node (z0) [circle, draw, thick] {$q_0,s_0$};
    \node (z11) [circle, draw, thick, below left = 1cm and 2.5cm of z0] {$q_1, s_1$};
    \node (z12) [circle, draw, thick, below right = 1cm and 2.5cm of z0] {$q_1', s_1'$};

    \node (z21) [circle, draw, thick, below left = 1cm and 1.25cm of z11] {$q_2, s_2$};
    \node (z22) [circle, draw, thick, below right = 1cm and 1.25cm of z11] {$q_2', s_2'$};
    \node (z25) [circle, draw, thick, below = .55cm of z11] {$q_2'', s_2''$};

    \node (z23) [circle, draw, thick, below left = 1cm and 1.25cm of z12] {$q_2''', s_2'''$};
    \node (z24) [circle, draw, thick, below right = 1cm and 1.25cm of z12] {$q_2'''', s_2''''$};
    
    \draw [->] (z0) -- (z11);
    \draw [->] (z0) -- (z12);

    \draw [->] (z11) -- (z21);
    \draw [->] (z11) -- (z22);
    \draw [->] (z11) -- (z25);
    \draw [->] (z12) -- (z23);
    \draw [->] (z12) -- (z24);

  \end{tikzpicture}
}

\newcommand{\ndetercompbss}[0]{
  \begin{tikzpicture}[inner sep=1mm, minimum width=1.5cm]
    
    \node (z0) [circle, draw, thick] {$z_0$};
    \node (z11) [circle, draw, thick, below left = 1cm and 2.5cm of z0] {$z_1$};
    \node (z12) [circle, draw, thick, below right = 1cm and 2.5cm of z0] {$z_1'$};

    \node (z21) [circle, draw, thick, below left = 1cm and 1.25cm of z11] {$z_2$};
    \node (z22) [circle, draw, thick, below right = 1cm and 1.25cm of z11] {$z_2'$};
    \node (z25) [circle, draw, thick, below = .55cm of z11] {$z_2''$};

    \node (z23) [circle, draw, thick, below left = 1cm and 1.25cm of z12] {$z_2'''$};
    \node (z24) [circle, draw, thick, below right = 1cm and 1.25cm of z12] {$z_2''''$};
    
    \draw [->] (z0) -- (z11);
    \draw [->] (z0) -- (z12);

    \draw [->] (z11) -- (z21);
    \draw [->] (z11) -- (z22);
    \draw [->] (z11) -- (z25);
    \draw [->] (z12) -- (z23);
    \draw [->] (z12) -- (z24);
    

  \end{tikzpicture}
}

\newcommand{\newtonhigh}[0]{
  
  \begin{tikzpicture}[node distance=4cm]

    \node (init)   [input, draw] {Input: $p \in \reals[x]$, $x_0 \in \reals$, $\epsilon \in \reals$};
    \node (comp)   [compute, draw, below of=init]   {$x = x - \frac{p(x)}{p'(x)}$};
    \node (check)  [branch, draw, below of=comp]    {$|p(x)| - \epsilon < 0$};
    \node (accept) [accept, draw, below of=check]   {Output $z$};
    
    \draw [->, thick] (init) --                                      (comp);
    \draw [->, thick] (comp) --                                      (check);
    \draw [->, thick] (check) to [out=0, in=0] node[auto, swap] {No} (comp);
    \draw [->, thick] (check) to node[auto] {Yes}                    (accept);

  \end{tikzpicture}
}




\tikzstyle{mandpoint}=[circle, 
                       draw,
                       fill=blue!100, 
                       inner sep=.3mm]

                       